readGenalex 0.9.9000 (development version)
==========================================

-   Creates and manipulates data frames using the new class 'genalex'.
    The "genetic.data.format" attribute present in earlier versions of
    this package is removed.
-   Extensive documentation updates reflecting use of class 'genalex'
-   Several functions have been deprecated and replaced with generics
    recognising class 'genalex': printGenalexGenotype is replaced by
    printGenotype, computeGenalexColumns is replaced by getLocusColumns,
    reorderGenalexLoci is replaced by reorderLoci, getGenalexLocus is
    replaced by getLocus, putGenalexLocus is replaced by replaceLocus,
    dropGenalexLoci is replaced by dropLocus, and reduceGenalexPloidy is
    replaced by reducePloidy
-   New as.genalex generic with as.genalex.genalex and
    as.genalex.data.frame. The latter will convert a pre-class 'genalex'
    data frame to class 'genalex', and is used wherever a data frame is
    returned so conversion from old to new format happens automatically.
    It will also convert a suitably-formatted data frame to class
    'genalex' after determining suitable attributes
-   There is a summary method for class 'genalex' which prints a few
    lines describing the data set, followed by a summary of the data
    frame contents and a summary of the extra columns, if present
-   New as.data.frame method to convert class 'genalex' to class
    'data.frame', optionally clearing all class 'genalex'-specific
    attributes
-   new genalex function to create a class 'genalex' object from
    constituent data
-   readGenalex now has ... in its argument list, for additional
    arguments to be passed to scan() while reading data
-   Added na.strings argument to readGenalex, with defaults that reflect
    GenAlEx's own expectations for missing data
-   Added na and na.character arguments to writeGenalex, with values to
    use for NA in genotype/numeric/logical columns and character
    columns, respectively
-   Clarified typing of sample, population, genotype, and extra columns.
    Sample and population columns are stored as character (population
    was previously a factor), genotype columns are stored as numeric,
    and extra columns are stored as their natural type as determined by
    type.convert(..., as.is=TRUE), so that character columns are not
    converted to factors.
-   As a result of the clarified typing, writeGenalex(..., quote=TRUE)
    will only quote names in the GenAlEx header, in the first two
    columns, and in any character-valued extra columns
-   Added tests for all functions and found a few bugs along the way
-   Rolled checkNullAlleles from my popgen repository into this package
-   Extended checkNullAlleles to return a matrix of potential null
    alleles, with a couple of indexing modes
-   Added quiet= option to checkNullAlleles, and pass through some
    arguments to printGenotype when quiet=FALSE
-   Added Qagr_adult_genotypesand Qagr_pericarp_genotypes data sets and
    modified examples to use them, and removed the example_genotypes
    data set
-   Created inst/extdata to hold data in non-R formats (simple tables),
    which of course includes GenAlEx-format data
-   DESCRIPTION now has an explicit collation order and bug report URL
-   Added 'data' target to Makefile to build specified RData files

readGenalex 0.4.1.9000 (development version)
============================================

-   Moved documentation from separate *.Rd files to Roxygen2 comments in
    R source using the really helpful Rd2roxygen package.
-   Implemented writeGenalex, to write a data.frame created by this
    package to a GenAlEx-compatible text file, and documented
    differences between output of writeGenalex and input to readGenalex
-   Fixed bug in is.genalex when genetic.data.format attribute doesn't
    exist
-   Slight expansion of documentation for reorderGenalexLoci
-   Removed Date from DESCRIPTION, generated automatically during
    package creation
-   DESCRIPTION uses Authors@R
-   Marginally more clever Makefile

readGenalex 0.4.1
=================

-   First release available on CRAN
-   First release available as a devtools-installable github repository
    (so development releases are always available via
    devtools::install_packages("douglasgscofield/readGenalex"))
-   Restructured into R package directory structure, with individual
    exported functions split into separate files, and internal functions
    into readGenalex-internal.R
-   Moved and expanded documentation following R package guidelines
-   Added example_genotypes toy dataset. After loading the package with
    library(readGenalex) do data(example_genotypes) to load
    example_genotypes into your envirnment. The same dataset is also
    available here in text form as data/example_genotypes.txt.
-   Added .Rbuildignore
-   Improve error messages for sample size mismatches
-   Handle lack of extra columns more gracefully, by completely leaving
    off the extra.columns attribute
-   Fix getGenalexLocus() when given a pop= argument
-   Fix printGenalexGenotype() to print sample name and population name
    using as.character() since population names are stored as factors
-   Remove the data.column.names attribute, which duplicated the values
    in names

readGenalex 0.4
===============

-   Downconvert ploidy using reduceGenalexPloidy(). Currently only
    handles 2n to 1n, and selects only the first allele of each locus.

readGenalex 0.3
===============

-   Improve error messages when mismatch between group names in the
    header and in the data
-   Handle the presence of extra columns to the right of the genotype
    columns. These are loaded into a separate extra.columns attribute.

